<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.4.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- MVC모듈 컨트롤러 기능 활성화 -->
	<annotation-driven />
	
	<!-- AOP 기능 활성화 -->
	<aop:aspectj-autoproxy/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.tmz.common.security" />
	<context:component-scan base-package="com.spring.tmz.common.task" />
	<context:component-scan base-package="com.spring.tmz.common" />
	<context:component-scan base-package="com.spring.tmz.service" />
	<context:component-scan base-package="com.spring.tmz.mapper" />
	<context:component-scan base-package="com.spring.tmz.controller" />
	<context:component-scan base-package="com.spring.tmz" />
	
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<beans:property name="supportedMediaTypes">
						<beans:list>
							<beans:value>text/html;charset=UTF-8</beans:value>
							<beans:value>application/json;charset=UTF-8</beans:value>
						</beans:list>
					</beans:property>
				</beans:bean>
				<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 멀티파티 업로드 구성을 위한 MultiPartResolver 빈 설정 -->
	<beans:bean id="multipartResolver"
	class= "org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
	
	<!-- 스케쥴러 -->
	<task:scheduler id="clearUploadRepoJobScheduler" pool-size="5" />
	<task:annotation-driven scheduler="clearUploadRepoJobScheduler"/>
	
	
	<!-- 스프링 시큐리티 어노테이션 구성 -->
	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>
</beans:beans>
